// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  email       String      @unique
  password    String
  first_name  String
  last_name   String
  avatar_url  String?
  confirmed   Int         @default(0) @db.SmallInt
  memes       Meme[]
  comments    Comment[]
  preferences MemeStats[]

  @@map("users")
}

model Meme {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  title      String
  meme_url   String
  user_name  String
  user       User        @relation(fields: [user_id], references: [id])
  user_id    Int
  likes      Int?        @default(0)
  dislikes   Int?        @default(0)
  comments   Comment[]
  stats      MemeStats[]

  @@map("memes")
}

model MemeStats {
  id           Int      @id @default(autoincrement())
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  meme_id      Int
  meme         Meme     @relation(fields: [meme_id], references: [id])
  is_lover     Int?     @default(0) @db.SmallInt
  is_hater     Int?     @default(0) @db.SmallInt
  made_comment Int?     @default(0) @db.SmallInt
  user_id      Int
  user         User     @relation(fields: [user_id], references: [id])

  @@map("meme_stats")
}

model Comment {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  content    String   @db.VarChar(1000)
  user_name  String
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  meme       Meme     @relation(fields: [meme_id], references: [id])
  meme_id    Int

  @@map("comments")
}
